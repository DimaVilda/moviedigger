openapi: 3.0.3
info:
  version: 1.0.0
  title: Client API for moviesdigger application
  description: This service is a test task for Backbase team and it's role is to serve users to interact with movies
paths:
  /client-api/v1/movies/{movieName}/iswon:
    get:
      tags:
        - movieDiggerClient
      summary: Check if movie is best picture oscar winner
      description: Returns the best picture oscar winner movie list by movie name parameter
      operationId: getWinner
      parameters:
        - name: movieName
          schema:
            type: string
          in: path
          description: movie name
          required: true
      responses:
        '200':
          description: A list of oscar's best picture winner movies
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMovieWinnersResponseList"
              example:
                - id: 466b8c0e-238e-46f3-9dba-dae01439bc26
                  name: Titanic
                - id: e83dc6ae-caec-405f-9226-d7f60906c5ef
                  name: Avatar
        '400':
          description: Bad request. The parameters are not valid
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/Error'
        '404':
          description: A movie name is not found
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/Error'
        '500':
          description: An unexpected condition was encountered
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/Error'

  /client-api/v1/movies/top-rated:
    get:
      tags:
        - movieDiggerClient
      summary: Get a list of top-rated movies
      description: Retrieve a list of the top 10 top-rated movies with optional sorting by box office value
      operationId: getTopRatedMovies
      parameters:
        - name: sort-direction
          description: The direction in which to sort movies
          in: query
          schema:
            type: string
            x-extensible-enum:
              - ASC
              - DESC
      responses:
        '200':
          description: Top rated movies response list ordered in asc or desc direction by office box value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTopRatedMoviesResponseBody'
              example:
                - name: Titanic
                  rating: 91
                  boxOffice: 2000000090.78
        '500':
          description: An unexpected condition was encountered
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/Error'

  /movies/{movieName}/rating:
    get:
      tags:
        - movieDiggerClient
      summary: Provide a rating of certain movie
      description: Retrieves the rating of a movie specified by the movie name
      operationId: getMovieRating
      parameters:
        - name: movieName
          description: The name of the movie
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Retrieved rating value of certain movie ad movie name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieRatingResponseBody'
        '404':
          description: Provided movie not found
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/Error'
        '500':
          description: An unexpected condition was encountered
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/Error'
    patch:
      tags:
        - movieDiggerClient
      summary: Update a movie's rating
      description: Updates the rating of provided movie specified by movie name
      operationId: provideMovieRating
      parameters:
        - name: movieName
          description: The name of the movie
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Rating value for a certain movie
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MovieRatingRequestBody"
      responses:
        '200':
          description: A rating for certain movie provided successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovieRatingResponseBody'
              example:
                - name: Titanic
                  rating: 91
        '400':
          description: Invalid rating value
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/Error'
        '404':
          description: Provided movie not found
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/Error'
        '500':
          description: An unexpected condition was encountered
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/Error'

  /movies/rating/{ratingId}:
    delete:
      tags:
        - movieDiggerClient
      summary: Delete certain user's movie rating
      description: Delete provided certain user's rating of certain movie. Note! Available only for admin
      operationId: deleteMovieRating
      parameters:
        - name: ratingId
          description: Rating of movie rated by user
          in: path
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          description: Rating was deleted successfully
          content:
            application/json:
              example: {}
        '400':
          description: Invalid rating value
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/Error'
        '404':
          description: Provided rating not found
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/Error'
        '500':
          description: An unexpected condition was encountered
          content:
            application/json:
              schema:
                $ref: 'common.yaml#/components/schemas/Error'

components:
  schemas:
    GetMovieWinnersResponseList:
      type: array
      items:
        $ref: '#/components/schemas/MovieWinnerResponseBodyItem'
    MovieWinnerResponseBodyItem:
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: 'common.yaml#/components/schemas/Uuid'
        name:
          description: Best picture movie name
          type: string
    GetTopRatedMoviesResponseBody:
      type: array
      items:
        $ref: '#/components/schemas/TopRatedMovieResponseBodyItem'
    TopRatedMovieResponseBodyItem:
      type: object
      required:
        - name
        - rating
        - boxOffice
      properties:
        name:
          description: Top rated movie name
          type: string
        rating:
          description: Top rated movie rating
          type: integer
          format: int32
        boxOffice:
          description: Movie's box office value
          type: number
          format: float
    MovieRatingResponseBody:
      type: object
      required:
        - name
        - rating
      properties:
        name:
          description: Rated movie name
          type: string
        rating:
          description: Rated movie rating
          type: integer
          format: int32
    MovieRatingRequestBody:
      type: object
      required:
        - rating
      properties:
        rating:
          description: The new rating for the movie
          type: integer
          format: int32



